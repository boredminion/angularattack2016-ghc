{"version":3,"file":"angularattack2016-ghc.component.js","sourceRoot":"","sources":["angularattack2016-ghc.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ROUTER_DIRECTIVES, Router, Routes} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {NavbarComponent} from './navbar';\nimport {WelcomeComponent} from './welcome';\nimport {MessagesComponent} from './messages';\nimport {MapComponent} from './map';\nimport {ShipyardComponent} from './shipyard';\nimport {AdminComponent} from './admin';\nimport {ScoresComponent} from './scores';\nimport {IntroComponent} from './intro';\nimport {AuthService, UserService, NotificationsService, Notification} from './shared';\nimport {ToasterConfig, ToasterContainerComponent, ToasterService} from 'angular2-toaster/angular2-toaster';\n\n\n@Component({\n  moduleId: module.id,\n  directives: [ROUTER_DIRECTIVES, NavbarComponent, ToasterContainerComponent],\n  providers: [ToasterService],\n  selector: 'angularattack2016-ghc-app',\n  templateUrl: 'angularattack2016-ghc.component.html',\n  styleUrls: ['angularattack2016-ghc.component.css']\n})\n\n@Routes([\n  { path: '/', component: WelcomeComponent }, { path: '/chat', component: MessagesComponent },\n  { path: '/map', component: MapComponent }, { path: '/shipyard', component: ShipyardComponent },\n  { path: '/admin', component: AdminComponent }, { path: '/scores', component: ScoresComponent },\n  { path: '/intro', component: IntroComponent }, { path: '*', component: WelcomeComponent }\n])\n\nexport class Angularattack2016GhcAppComponent implements OnInit {\n  title = 'angularattack2016-ghc works!';\n  score: number = 0;\n  intro: boolean = true;\n  toasterconfig: any = new ToasterConfig({\n    positionClass: 'toast-top-center'\n  });\n\n  constructor(private notificationsService: NotificationsService, private toasterService: ToasterService, private auth: AuthService, private userService: UserService, private router: Router, private location: Location) {\n    notificationsService.notification$.subscribe(notification => {\n      this.toasterService.pop(notification.type, notification.title, notification.message);\n    });\n    userService.currentUser.subscribe(user => {\n      if (user && user.currentScore) {\n        this.score = user.currentScore;\n      }\n    });\n  }\n\n  checkIntro() {\n    this.userService.currentUser.subscribe(user => {\n      if (this.auth.authenticated) {\n        if (!user || Object.keys(user).length < 5 || !user.image) {\n          this.router.navigate(['/intro']);\n        } else {\n          this.intro = false;\n          if (this.location.path() === '') {\n            this.router.navigate(['/map']);\n          }\n        }\n      } else {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (this.auth.authenticated) {\n      this.checkIntro();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n\n  signOut(): void {\n    this.userService.setOffline();\n    this.auth.signOut();\n    this.router.navigate(['/']);\n  }\n\n  signInWithGithub(): void {\n    this.auth.signInWithGithub().then(\n      (value) => {\n        this.checkIntro();\n      },\n      (err) => {\n        // on rejected\n      });\n  }\n  signInWithTwitter(): void {\n    this.auth.signInWithTwitter().then(\n      (value) => {\n        this.checkIntro();\n      },\n      (err) => {\n        // on rejected\n      });\n  }\n}"]}