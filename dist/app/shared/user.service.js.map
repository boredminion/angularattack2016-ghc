{"version":3,"file":"user.service.js","sourceRoot":"","sources":["user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\nimport {Inject, Injectable} from '@angular/core';\nimport {AngularFire, FirebaseListObservable, FirebaseObjectObservable, FirebaseRef} from 'angularfire2';\nimport {AuthService, IUser, User} from './';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Direction} from '../map';\nimport {Upgrade, UpgradeType} from '../ship';\nimport {GlobalService} from './global.service';\n\n@Injectable()\nexport class UserService {\n  public online: FirebaseListObservable<any>;\n  public connected: FirebaseObjectObservable<any>;\n  public users: IUser[] = [];\n  public users$: FirebaseListObservable<IUser[]>;\n  public currentUser: FirebaseObjectObservable<IUser>;\n  private ship: User;\n  private upgrades$: FirebaseListObservable<Upgrade[]>;\n  private af: AngularFire;\n  private auth: AuthService;\n  private onlineRef: Firebase;\n  private onlineItemRef: Firebase;\n\n  constructor(private globalService: GlobalService, af: AngularFire, auth: AuthService, @Inject(FirebaseRef) ref: Firebase) {\n    this.af = af;\n    this.users$ = af.database.list(`/users`);\n    this.users$.subscribe(\n        data => { this.users = data; }, err => console.log(err), () => console.log('done'));\n    this.auth = auth;\n    this.currentUser = this.af.database.object(`/users/` + this.auth.id);\n    this.upgrades$ = this.af.database.list(`/users/` + this.auth.id + `/upgrades`);\n    this.currentUser.subscribe(user => {\n      this.ship = user;\n    });\n    this.online = af.database.list('/users/' + this.auth.id + '/online');\n    this.onlineRef = ref.child(`/users/` + this.auth.id + `/online`);\n\n    const connectedRef = ref.child('/.info/connected');\n\n    this.connected = this.af.database.object(`/.info/connected`);\n    this.connected.subscribe(data => {\n      if (data === true) {\n        this.setOnline();\n      }\n    }, err => console.error(err), () => console.log('done'));\n  }\n\n  setOnline() {\n    this.onlineItemRef = this.onlineRef.child('1');\n    this.onlineItemRef.onDisconnect().remove();\n    this.onlineItemRef.set(true);\n  }\n\n  setOffline() { this.onlineItemRef.remove(); }\n\n  getUser(uid: string) { return this.af.database.object(`/users/` + uid); }\n  \n  getUsers() {\n    return \n  }\n\n  getShipName(uid: string) {\n    let user = this.users.find((user) => { return user.$key === uid; });\n    return user ? user.shipName : null;\n  }\n  \n  moveShip(ship: User) {\n    return this.currentUser.update({\n      facing: ship.facing,\n      lastX: this.ship.x,\n      lastY: this.ship.y,\n      x: ship.x,\n      y: ship.y\n    });\n\t}\n  \n  scoreOwnShip(ship: User) {\n\t\treturn this.currentUser.update({\n      wanted: ship.wanted ? ship.wanted : false,\n      bounty: ship.bounty ? ship.bounty : 0,\n      criminalScore: ship.criminalScore ? ship.criminalScore : 0,\n\t\t\tcurrentScore: ship.currentScore ? ship.currentScore : 0,\n\t\t\tstolenScore: ship.stolenScore ? ship.stolenScore : 0,\n\t\t\ttotalScore: ship.totalScore ? ship.totalScore : 0\n\t\t});\n\t}\n\n\tscoreShip(ship: User) {\n    let newX = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    let newY = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    let randomLocation = false;\n    while(this.users.filter(user => {\n      return user.x === newX && user.y === newY;\n    }).length > 0) {\n      newX = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n      newY = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    }\n    if (ship.health <= 0) {\n      return this.users$.update(ship.$key, {\n        facing: ship.facing,\n        lastX: ship.x,\n        lastY: ship.y,\n        x: newX,\n        y: newY,\n        currentScore: ship.currentScore ? ship.currentScore : 0,\n        stolenScore: ship.stolenScore ? ship.stolenScore : 0,\n        totalScore: ship.totalScore ? ship.totalScore : 0,\n        health: this.globalService.globalSettings.baseShipHealth,\n        upgrades: [],\n        wanted: false,\n        bounty: 0,\n        criminalScore: ship.criminalScore ? ship.criminalScore : 0\n      });\n    } else {\n      return this.users$.update(ship.$key, {\n        currentScore: ship.currentScore ? ship.currentScore : 0,\n        stolenScore: ship.stolenScore ? ship.stolenScore : 0,\n        totalScore: ship.totalScore ? ship.totalScore : 0,\n        health: ship.health ? ship.health : this.globalService.globalSettings.baseShipHealth\n      });\n    }\n\t}\n  \n  buyUpgrade(upgrade: Upgrade) {\n    this.upgrades$.push(upgrade.$key);\n    this.currentUser.update({\n      currentScore: this.ship.currentScore - upgrade.cost,\n      health: upgrade.type === UpgradeType.Armor ? this.ship.health += upgrade.value : this.ship.health\n    });\n  }\n\n  setShipName(newShipName: string, image: string, x: number, y: number, facing: Direction) {\n    let currentUser: User = new User(newShipName || this.auth.username, image || 'spaceship14-240x185.png');\n    let newX = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    let newY = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    let randomLocation = false;\n    while(this.users.filter(user => {\n      return user.x === newX && user.y === newY;\n    }).length > 0) {\n      newX = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n      newY = Math.floor(Math.random() * this.globalService.globalSettings.mapExtent);\n    }\n    if (x === null && y === null) {\n      currentUser.x = newX;\n      currentUser.y = newY;\n    } else {\n      currentUser.x = x;\n      currentUser.y = y;\n    }\n    if (facing === null) {\n      currentUser.facing = 0;\n    } else {\n      currentUser.facing = facing;\n    }\n    this.af.database.object(`/users/` + this.auth.id).set(currentUser);\n    window.location.replace('/map');\n  }\n}\n"]}