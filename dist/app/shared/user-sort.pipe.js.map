{"version":3,"file":"user-sort.pipe.js","sourceRoot":"","sources":["user-sort.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAMpD;IAAA;IAeA,CAAC;IAbC,4BAAS,GAAT,UAAU,KAAa,EAAE,KAAW;QAClC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI;gBAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;YACH,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,UAAC,CAAM,EAAG,CAAO;gBAC5C,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAhBH;QAAC,WAAI,CAAC;YACJ,IAAI,EAAE,UAAU;SACjB,CAAC;;gBAAA;IAgBF,eAAC;AAAD,CAAC,AAfD,IAeC;AAfY,gBAAQ,WAepB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from './';\n\n@Pipe({\n  name: 'userSort'\n})\nexport class UserSort implements PipeTransform {\n\n  transform(users: User[], which?: any): User[] {\n    let sortedUsers = [];\n    if (users && which) {\n      let tempUsers = users.filter(user => {        \n        return Object.keys(user).length > 10;\n      });\n      sortedUsers = tempUsers.sort((a:User , b: User) => {\n        return b[which] - a[which];\n      });\n    }\n    return sortedUsers;\n  }\n\n}\n"]}