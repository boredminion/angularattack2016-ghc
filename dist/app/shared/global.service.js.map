{"version":3,"file":"global.service.js","sourceRoot":"","sources":["global.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAmC,eAAe,CAAC,CAAA;AACnD,6BAAyF,cAAc,CAAC,CAAA;AAoBxG;IAeE;QAFA,aAAQ,GAAc,EAAE,CAAC;QACzB,WAAM,GAAW,EAAE,CAAC;QAElB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IACH,eAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,gBAAQ,WA6BpB,CAAA;AAGD;IAKE,uBAAoB,EAAe,EAAuB,GAAa;QALzE,iBA6BC;QAxBqB,OAAE,GAAF,EAAE,CAAa;QAH5B,mBAAc,GAAc,IAAI,QAAQ,EAAE,CAAC;QAIhD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,UAAA,QAAQ;YACrC,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;gBACtB,KAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ,UAAK,WAAsB;QACzB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,mCAAW,GAAX,UAAY,UAAmB;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,qCAAa,GAAb,UAAc,UAAkB;QAC9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IA5BH;QAAC,iBAAU,EAAE;mBAM2B,aAAM,CAAC,0BAAW,CAAC;;qBAN9C;IA8Bb,oBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,qBAAa,gBA6BzB,CAAA","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport {AngularFire, FirebaseObjectObservable, FirebaseListObservable, FirebaseRef} from 'angularfire2';\nimport {Upgrade} from '../ship';\n\nexport interface ISettings {\n  mapExtent: number;\n  mapX: number;\n  mapY: number;\n  maxPlanets: number;\n  actionDelay: number;\n  baseShipHealth: number;\n  baseWeaponDamage: number;\n  baseWeaponRange: number;\n  mineValue: number;\n  tradeValue: number;\n  maxAsteroids: number;\n  maxAIShips: number;\n  upgrades: Upgrade[];\n  bounty: number;\n}\n\nexport class Settings implements ISettings {\n  mapExtent: number;\n  mapX: number;\n  mapY: number;\n  maxPlanets: number;\n  actionDelay: number;\n  baseShipHealth: number;\n  baseWeaponDamage: number;\n  baseWeaponRange: number;\n  mineValue: number;\n  tradeValue: number;\n  maxAsteroids: number;\n  maxAIShips: number;\n  upgrades: Upgrade[] = [];\n  bounty: number = 50;\n  constructor() {\n    this.mapExtent = 100;\n    this.mapX = 9;\n    this.mapY = 11;\n    this.maxPlanets = 100;\n    this.maxAsteroids = 50;\n    this.maxAIShips = 100;\n    this.actionDelay = 2;\n    this.baseShipHealth = 100;\n    this.baseWeaponDamage = 10;\n    this.baseWeaponRange = 1;\n    this.mineValue = 10;\n    this.tradeValue = 10;\n  }\n}\n\n@Injectable()\nexport class GlobalService {\n  public globalSettings$: FirebaseObjectObservable<ISettings>;\n  public globalSettings: ISettings = new Settings();\n  public upgrades: FirebaseListObservable<Upgrade[]>;\n\n  constructor(private af: AngularFire, @Inject(FirebaseRef) ref: Firebase) {\n    this.globalSettings$ = this.af.database.object(`/settings`);\n    this.upgrades = this.af.database.list(`/settings/upgrades`);\n    this.globalSettings$.subscribe(settings => {\n      if (settings === null) {\n        this.save(new Settings());\n      } else {\n        this.globalSettings = settings;\n      }\n    });\n  }\n  \n  save(newSettings: ISettings) {\n    this.globalSettings$.set(newSettings);\n  }\n  \n  saveUpgrade(newUpgrade: Upgrade) {\n    this.upgrades.push(newUpgrade);\n  }\n  \n  removeUpgrade(upgradeKey: string) {\n    this.upgrades.remove(upgradeKey);\n  }\n\n}\n"]}