{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {AuthProviders, FirebaseAuth, FirebaseAuthState} from 'angularfire2';\n\n\n@Injectable()\nexport class AuthService {\n  private authState: FirebaseAuthData|FirebaseAuthState;\n\n  constructor(public auth$: FirebaseAuth) {\n    this.authState = auth$.getAuth();\n\n    auth$.subscribe((state: FirebaseAuthState) => { this.authState = state; });\n  }\n\n  get authenticated(): boolean { return this.authState !== null && !this.expired; }\n\n  get expired(): boolean { return !this.authState || (this.authState.expires * 1000) < Date.now(); }\n\n  get id(): string { return this.authenticated ? this.authState.uid : ''; }\n\n  get username(): string {\n    let username = '';\n    if (this.authenticated && Object.keys(this.authState).indexOf('github') > -1) {\n      username = this.authState.github.username;\n    }\n    if (this.authenticated && Object.keys(this.authState).indexOf('twitter') > -1) {\n      username = this.authState.twitter.username;\n    }\n    return this.authenticated ? username : '';\n  }\n  \n  get profileLink(): string {\n    let url = '';\n    if (this.authenticated && Object.keys(this.authState).indexOf('github') > -1) {\n      url = 'https://github.com/' + this.authState.github.username + '';\n    }\n    if (this.authenticated && Object.keys(this.authState).indexOf('twitter') > -1) {\n      url = 'https://twitter.com/' + this.authState.twitter.username;\n    }\n    return this.authenticated ? url : '';\n  }\n\n  signInWithGithub(): Promise<FirebaseAuthState> {\n    // signin doesn't set the user online, and can't use userService in here because of circular\n    // dependency\n    // sign the user online via angularattack2016-ghc.component.ts (window refresh)\n    return this.auth$.login({provider: AuthProviders.Github});\n  }\n  \n  signInWithTwitter(): Promise<FirebaseAuthState> {\n    // signin doesn't set the user online, and can't use userService in here because of circular\n    // dependency\n    // sign the user online via angularattack2016-ghc.component.ts (window refresh)\n    return this.auth$.login({provider: AuthProviders.Twitter});\n  }\n\n  signOut(): void { this.auth$.logout(); }\n}\n"]}